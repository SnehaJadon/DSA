https://www.geeksforgeeks.org/problems/union-of-two-sorted-arrays-1587115621/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=union-of-two-sorted-arrays

class Solution{
    public:
    //arr1,arr2 : the arrays
    // n, m: size of arrays
    //Function to return a list containing the union of the two arrays. 
    vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        //Your code here
        //return vector with correct order of elements
        
        set<int>st;
        
        for(int i=0; i<n; i++){
            st.insert(arr1[i]);
        }
        for(int i=0; i<m; i++){
            st.insert(arr2[i]);
        }
        
        vector<int> ans;
        for(auto it: st){
            ans.push_back(it);
        }
        return ans;
    }
};


class Solution{
    public:
    //arr1,arr2 : the arrays
    // n, m: size of arrays
    //Function to return a list containing the union of the two arrays. 
    vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        //Your code here
        //return vector with correct order of elements
        
        int i=0, j=0;
        vector<int>unionArr;
        
        while(i< n && j<m){
            if(arr1[i] <= arr2[j]){
                if(unionArr.size() == 0 || unionArr.back() != arr1[i]){
                    unionArr.push_back(arr1[i]);
                }
                i++;
            }
            else{
                if(unionArr.size() == 0 || unionArr.back() != arr2[j]){
                    unionArr.push_back(arr2[j]);
                }
                j++;
            }
        }
        
        while(i<n){
            if(unionArr.size() == 0 || unionArr.back() != arr1[i]){
                unionArr.push_back(arr1[i]);
            }
            i++;            
        }
        
        while(j<m){
            if(unionArr.size() == 0 || unionArr.back() != arr2[j]){
                unionArr.push_back(arr2[j]);
            }
            j++;    
        }
        
        return unionArr;
    }
};

