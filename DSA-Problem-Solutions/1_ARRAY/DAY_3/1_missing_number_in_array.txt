https://leetcode.com/problems/missing-number/

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n = nums.size();
        vector<int>ans(n+1,0);

        for(int i=0; i<nums.size(); i++){
            ans[nums[i]] = 1;
        }

        for(int i=0; i<ans.size(); i++){
            if(ans[i] == 0){
                return i;
            }
        }

        return -1;
    }
};

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        int requiredSum =  (n * (n+1))/2;
        int totalSum =  0;
        
        for(int i=0; i<n; i++){
            totalSum += nums[i];
        }
        return requiredSum - totalSum;
        
    }
};

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int N = nums.size();

    int xor1 = 0, xor2 = 0;

    for (int i = 0; i < N ; i++) {
        xor2 = xor2 ^ nums[i]; // XOR of array elements
        xor1 = xor1 ^ (i); //XOR up to [1...N-1]
    }
    xor1 = xor1 ^ N; //XOR up to [1...N]

    return (xor1 ^ xor2); 
        
    }
};