https://leetcode.com/problems/rearrange-array-elements-by-sign/description/

class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans (n, 0);

        int positiveIdx = 0, negativeIdx = 1;

        for(int i=0; i<nums.size(); i++){
            if(nums[i] > 0){
                ans[positiveIdx] = nums[i];
                positiveIdx+=2;
            }
            else{
                ans[negativeIdx] = nums[i];
                negativeIdx+=2;
            }
        }

        return ans;
        
    }
};


https://www.naukri.com/code360/problems/alternate-numbers_6783445

if positives and negatives are not equal

vector<int> alternateNumbers(vector<int>&a) {
    // Write your code here.
    int n = a.size();
    vector<int> pos;
    vector<int> neg;
    
    for(int i=0;i<n;i++){
      if (a[i] > 0) {
        pos.push_back(a[i]);
      } else{
        neg.push_back(a[i]);
      }
    }
    

    if(pos.size() < neg.size()){
        for(int i=0;i<pos.size();i++){
        
        a[2*i] = pos[i];
        a[2*i+1] = neg[i];
        }
        
        int index = pos.size()*2;
        for(int i = pos.size();i<neg.size();i++){
            
            a[index] = neg[i];
            index++;
        }
    }
    
    else{
        for(int i=0;i<neg.size();i++){        
        a[2*i] = pos[i];
        a[2*i+1] = neg[i];
    }
        int index = neg.size()*2;
        for(int i = neg.size();i<pos.size();i++){
            
            a[index] = pos[i];
            index++;
        }
    }
    return a;
}